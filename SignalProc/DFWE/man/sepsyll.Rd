% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sepsyll.R
\name{sepsyll}
\alias{sepsyll}
\title{sepsyll}
\usage{
sepsyll = function(wav_file, Fs, sms, thresh, syllable_filter = FALSE, syl_filt)
}
\arguments{
\item{wav_file}{Can be either a .wav file or a list of frequencies}

\item{Fs}{Sampling rate, can be supplied by .wav or specified}

\item{sms}{Sets the filter threshold. Defaults to 20ms (0.020 seconds)}

\item{thresh}{Sets the threshold for identifying syllables. If there is not a user specified threshold, the data will
plot and you will be prompted to select a level.}

\item{syllable_filter}{Defaults to false. Turns off/on the syllable filter set with syl_filt.}

\item{syl_filt}{Sets a minimum sample length for syllables in order to filter out non-syllables
i.e. syllables that are detected as a result of noise and are not of interest. Defaults to 50.}
}
\value{
A list of syllables and times
}
\description{
This function seperates syllables from a recording. This recording can be a .wav file read by tuneR or
frequency data. It will return a list of lists and can be searched by index. All syllables and times will be numbered.
Syllable frequency data, syllable time, and syllable time relative to recording are all included.
}
\examples{
sepsyll(zfinch_data, thresh = 1000, syllable_filter = TRUE, syl_filt = 15)

}
