% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/specplot.R
\name{specplot}
\alias{specplot}
\title{specplot}
\usage{
specplot = function(freq_data, Fs, nfft, wl, ovlp, normal = TRUE, amp_range, color, amp_value = FALSE)
}
\arguments{
\item{freq_data}{Wav file or frequency data}

\item{Fs}{Sample rate, not necessary if provided by .wav file}

\item{nfft}{Defaults to 512}

\item{wl}{Defaults to 1/2 nfft}

\item{ovlp}{Overlap, give in percent. Defaults to 50 percent}

\item{normal}{Normalize. Defaults to TRUE}

\item{amp_range}{DB range}

\item{x_limit}{List of x-limits}

\item{y_limit}{List of y-limits}

\item{color}{Choose from 4 present color palettes; 1 = reverse heat, 2 = reverse greyscale, 3 = greyscale, 4 = heat
Defaults to reverse heat}

\item{amp_value}{Display min and max dB. Defaults to FALSE}

\item{...}{Pass on plot and graphical arguments. See function imagep in oce for availanble arguments}
}
\value{
A plot of a spectrgram using the default R graphics
}
\description{
This function will plot spectrograms. It works with either a wav file read by tuneR or frequency data.
When using frequency data alone, you need to specify a sample frequency. This function relies on the
imagep function from oce. specplot uses custom color palettes with 30 colors. Most parameters have defaults
and do not need to be specified by the user. Can pass graphical arguements onto imagep.
}
\examples{
specplot(zfinch_data, ovlp = 90, color = 2, amp_value = TRUE, amp_range = c(-45,-10))

}
